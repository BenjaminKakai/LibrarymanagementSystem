{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/LibrarymanagementSystem/src/IssueManagement/IssueManagement.js\",\n  _s = $RefreshSig$();\n// src/IssueManagement/IssueManagement.js\n\nimport React, { useState } from 'react';\nimport './IssueManagement.css'; // Make sure this path matches your CSS file location\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IssueManagement = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [bookId, setBookId] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [currentReadId, setCurrentReadId] = useState('');\n  const [error, setError] = useState(''); // State to store error messages\n  const [successMessage, setSuccessMessage] = useState(''); // State to store success messages\n\n  const handleAssignBook = async event => {\n    event.preventDefault();\n    setError(''); // Reset error messages before new operation\n    setSuccessMessage(''); // Reset success messages before new operation\n    try {\n      const authToken = localStorage.getItem('authToken'); // Assume auth token is stored in local storage\n      const response = await fetch('http://localhost:8081/api/currentReads/assign', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}` // Ensure this matches your authentication method\n        },\n        body: JSON.stringify({\n          userId,\n          bookId,\n          startDate,\n          endDate\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Book assignment failed: ' + response.statusText);\n      }\n      const data = await response.json();\n      console.log('Book assigned successfully:', data);\n      setSuccessMessage('Book assigned successfully.'); // Set success message\n      // Optionally reset form fields here if needed\n    } catch (error) {\n      console.error('An error occurred:', error);\n      setError(error.message); // Set error message to display in UI\n    }\n  };\n  const handleReturnBook = async event => {\n    event.preventDefault();\n    setError(''); // Reset error messages before new operation\n    setSuccessMessage(''); // Reset success messages before new operation\n    try {\n      const authToken = localStorage.getItem('authToken'); // Assume auth token is stored in local storage\n      const response = await fetch(`http://localhost:8081/api/currentReads/return/${currentReadId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${authToken}` // Ensure this matches your authentication method\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Returning book failed: ' + response.statusText);\n      }\n      console.log('Book returned successfully');\n      setSuccessMessage('Book returned successfully.'); // Set success message\n      // Optionally reset form fields here if needed\n    } catch (error) {\n      console.error('An error occurred:', error);\n      setError(error.message); // Set error message to display in UI\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"issue-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Issue Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), \" // Display error message if any\", successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 26\n    }, this), \" // Display success message if any\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAssignBook,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Assign Book to User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userId,\n        onChange: e => setUserId(e.target.value),\n        placeholder: \"User ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: bookId,\n        onChange: e => setBookId(e.target.value),\n        placeholder: \"Book ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        placeholder: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value),\n        placeholder: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Assign Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReturnBook,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Return Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentReadId,\n        onChange: e => setCurrentReadId(e.target.value),\n        placeholder: \"Current Read ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Return Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(IssueManagement, \"GtgPr/byX+qxBmgSxB51dD1/FxQ=\");\n_c = IssueManagement;\nexport default IssueManagement;\nvar _c;\n$RefreshReg$(_c, \"IssueManagement\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","IssueManagement","_s","userId","setUserId","bookId","setBookId","startDate","setStartDate","endDate","setEndDate","currentReadId","setCurrentReadId","error","setError","successMessage","setSuccessMessage","handleAssignBook","event","preventDefault","authToken","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","data","json","console","log","message","handleReturnBook","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/benjamin/LibrarymanagementSystem/src/IssueManagement/IssueManagement.js"],"sourcesContent":["// src/IssueManagement/IssueManagement.js\n\nimport React, { useState } from 'react';\nimport './IssueManagement.css'; // Make sure this path matches your CSS file location\n\nconst IssueManagement = () => {\n  const [userId, setUserId] = useState('');\n  const [bookId, setBookId] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [currentReadId, setCurrentReadId] = useState('');\n  const [error, setError] = useState(''); // State to store error messages\n  const [successMessage, setSuccessMessage] = useState(''); // State to store success messages\n\n  const handleAssignBook = async (event) => {\n    event.preventDefault();\n    setError(''); // Reset error messages before new operation\n    setSuccessMessage(''); // Reset success messages before new operation\n    try {\n      const authToken = localStorage.getItem('authToken'); // Assume auth token is stored in local storage\n      const response = await fetch('http://localhost:8081/api/currentReads/assign', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${authToken}` // Ensure this matches your authentication method\n        },\n        body: JSON.stringify({ userId, bookId, startDate, endDate }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Book assignment failed: ' + response.statusText);\n      }\n\n      const data = await response.json();\n      console.log('Book assigned successfully:', data);\n      setSuccessMessage('Book assigned successfully.'); // Set success message\n      // Optionally reset form fields here if needed\n    } catch (error) {\n      console.error('An error occurred:', error);\n      setError(error.message); // Set error message to display in UI\n    }\n  };\n\n  const handleReturnBook = async (event) => {\n    event.preventDefault();\n    setError(''); // Reset error messages before new operation\n    setSuccessMessage(''); // Reset success messages before new operation\n    try {\n      const authToken = localStorage.getItem('authToken'); // Assume auth token is stored in local storage\n      const response = await fetch(`http://localhost:8081/api/currentReads/return/${currentReadId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${authToken}` // Ensure this matches your authentication method\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Returning book failed: ' + response.statusText);\n      }\n\n      console.log('Book returned successfully');\n      setSuccessMessage('Book returned successfully.'); // Set success message\n      // Optionally reset form fields here if needed\n    } catch (error) {\n      console.error('An error occurred:', error);\n      setError(error.message); // Set error message to display in UI\n    }\n  };\n\n  return (\n    <div className=\"issue-management-container\">\n      <h1>Issue Management</h1>\n      {error && <div className=\"error-message\">Error: {error}</div>} // Display error message if any\n      {successMessage && <div className=\"success-message\">{successMessage}</div>} // Display success message if any\n      <form onSubmit={handleAssignBook}>\n        <h3>Assign Book to User</h3>\n        <input type=\"text\" value={userId} onChange={(e) => setUserId(e.target.value)} placeholder=\"User ID\" />\n        <input type=\"text\" value={bookId} onChange={(e) => setBookId(e.target.value)} placeholder=\"Book ID\" />\n        <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} placeholder=\"Start Date\" />\n        <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} placeholder=\"End Date\" />\n        <button type=\"submit\">Assign Book</button>\n      </form>\n\n      <form onSubmit={handleReturnBook}>\n        <h3>Return Book</h3>\n        <input type=\"text\" value={currentReadId} onChange={(e) => setCurrentReadId(e.target.value)} placeholder=\"Current Read ID\" />\n        <button type=\"submit\">Return Book</button>\n      </form>\n    </div>\n  );\n};\n\nexport default IssueManagement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}