{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/LibrarymanagementSystem/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [authError, setAuthError] = useState(''); // State for storing authentication errors\n\n  // Async login function\n  const login = async (username, password) => {\n    try {\n      const response = await fetch('http://localhost:8081/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        // If the response is not ok, throw an error with the response status\n        throw new Error(`Login failed: ${response.statusText}`);\n      }\n      const userData = await response.json();\n      setCurrentUser(userData); // Set user data on successful login\n      localStorage.setItem('authToken', userData.token); // Simulate auth token storage\n      setAuthError(''); // Reset any previous error\n    } catch (error) {\n      // Handle errors, such as network issues or JSON parsing problems\n      console.error('Login error:', error);\n      setAuthError(error.message); // Set authentication error to display in UI\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('authToken'); // Clear auth token storage\n    setAuthError(''); // Clear any authentication error\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    authError // Provide the auth error for consumption in components\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"ig1G83Q0XngSfBZjjEHLhH9W69o=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","authError","setAuthError","login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","userData","json","localStorage","setItem","token","error","console","message","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/benjamin/LibrarymanagementSystem/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\n\nimport React, { createContext, useContext, useState } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [authError, setAuthError] = useState(''); // State for storing authentication errors\n\n  // Async login function\n  const login = async (username, password) => {\n    try {\n      const response = await fetch('http://localhost:8081/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n      if (!response.ok) {\n        // If the response is not ok, throw an error with the response status\n        throw new Error(`Login failed: ${response.statusText}`);\n      }\n      const userData = await response.json();\n      setCurrentUser(userData); // Set user data on successful login\n      localStorage.setItem('authToken', userData.token); // Simulate auth token storage\n      setAuthError(''); // Reset any previous error\n    } catch (error) {\n      // Handle errors, such as network issues or JSON parsing problems\n      console.error('Login error:', error);\n      setAuthError(error.message); // Set authentication error to display in UI\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('authToken'); // Clear auth token storage\n    setAuthError(''); // Clear any authentication error\n  };\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n    authError // Provide the auth error for consumption in components\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMa,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,QAAQ;UAAEC;QAAS,CAAC;MAC7C,CAAC,CAAC;MACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB;QACA,MAAM,IAAIC,KAAK,CAAE,iBAAgBR,QAAQ,CAACS,UAAW,EAAC,CAAC;MACzD;MACA,MAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACtCjB,cAAc,CAACgB,QAAQ,CAAC,CAAC,CAAC;MAC1BE,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC;MACnDlB,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCnB,YAAY,CAACmB,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;IAC/B;EACF,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBxB,cAAc,CAAC,IAAI,CAAC;IACpBkB,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;IACtCvB,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,MAAMwB,KAAK,GAAG;IACZ3B,WAAW;IACXI,KAAK;IACLqB,MAAM;IACNvB,SAAS,CAAC;EACZ,CAAC;EAED,oBAAOT,OAAA,CAACC,WAAW,CAACkC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA7B,QAAA,EAAEA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACjC,GAAA,CA5CWF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}