{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/LibrarymanagementSystem/src/AdminDashboard/AdminDashboard.js\",\n  _s = $RefreshSig$();\n// src/AdminDashboard/AdminDashboard.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminDashboard.css';\nimport { useAuth } from '../context/AuthContext'; // Import useAuth if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useAuth(); // Use the useAuth hook to access currentUser\n\n  // Authentication check (simplified version)\n  useEffect(() => {\n    if (!currentUser || !currentUser.isAdmin) {\n      navigate('/login'); // Redirect non-authenticated or non-admin users\n    }\n    // Assuming you have authenticated endpoints that only allow admin access\n    const fetchResources = async () => {\n      try {\n        const booksResponse = await fetch('http://localhost:8081/api/books', {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        const booksData = await booksResponse.json();\n        setBooks(booksData);\n        const usersResponse = await fetch('http://localhost:8081/api/users', {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        const usersData = await usersResponse.json();\n        setUsers(usersData);\n      } catch (error) {\n        console.error(\"Failed to fetch resources:\", error);\n      }\n    };\n    fetchResources();\n  }, [navigate, currentUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Books Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), books.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [book.name, \" - \", book.author]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Users Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.username\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"6kUUI+aLeFqD5Io571e1LtJknyE=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","jsxDEV","_jsxDEV","AdminDashboard","_s","books","setBooks","users","setUsers","navigate","currentUser","isAdmin","fetchResources","booksResponse","fetch","headers","localStorage","getItem","booksData","json","usersResponse","usersData","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","book","name","author","id","user","username","_c","$RefreshReg$"],"sources":["/home/benjamin/LibrarymanagementSystem/src/AdminDashboard/AdminDashboard.js"],"sourcesContent":["// src/AdminDashboard/AdminDashboard.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminDashboard.css';\nimport { useAuth } from '../context/AuthContext'; // Import useAuth if needed\n\nconst AdminDashboard = () => {\n  const [books, setBooks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n  const { currentUser } = useAuth(); // Use the useAuth hook to access currentUser\n\n  // Authentication check (simplified version)\n  useEffect(() => {\n    if (!currentUser || !currentUser.isAdmin) {\n      navigate('/login'); // Redirect non-authenticated or non-admin users\n    }\n    // Assuming you have authenticated endpoints that only allow admin access\n    const fetchResources = async () => {\n      try {\n        const booksResponse = await fetch('http://localhost:8081/api/books', {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n          },\n        });\n        const booksData = await booksResponse.json();\n        setBooks(booksData);\n\n        const usersResponse = await fetch('http://localhost:8081/api/users', {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n          },\n        });\n        const usersData = await usersResponse.json();\n        setUsers(usersData);\n      } catch (error) {\n        console.error(\"Failed to fetch resources:\", error);\n      }\n    };\n\n    fetchResources();\n  }, [navigate, currentUser]);\n\n  return (\n    <div className=\"admin-dashboard-container\">\n      <h1>Admin Dashboard</h1>\n      <section>\n        <h2>Books Management</h2>\n        {/* List books and provide management options like add, edit, delete */}\n        {books.map(book => (\n          <div key={book.id}>{book.name} - {book.author}</div>\n        ))}\n      </section>\n      <section>\n        <h2>Users Management</h2>\n        {/* List users and provide management options like edit roles, delete users */}\n        {users.map(user => (\n          <div key={user.id}>{user.username}</div>\n        ))}\n      </section>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}