{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/LibrarymanagementSystem/src/BookDetail/BookDetail.js\",\n  _s = $RefreshSig$();\n// src/BookDetail/BookDetail.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './BookDetail.css'; // Ensure this path matches the location of your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Extract the book ID from the URL\n  const [book, setBook] = useState(null); // State to hold book details\n  const [loading, setLoading] = useState(true); // State to manage loading status\n  const [error, setError] = useState(''); // State to store any error messages\n\n  useEffect(() => {\n    setLoading(true); // Set loading to true when starting to fetch\n    fetch(`http://localhost:8081/api/books/${id}`).then(response => {\n      if (!response.ok) {\n        // Check if response is not ok and throw error\n        throw new Error('Failed to fetch book details: ' + response.statusText);\n      }\n      return response.json();\n    }).then(data => {\n      setBook(data); // Set the fetched data to the book state\n      setError(''); // Clear any previous errors\n    }).catch(error => {\n      console.error(\"There was an error fetching the book details:\", error);\n      setError(error.message); // Set error message to display in UI\n    }).finally(() => setLoading(false)); // Set loading to false when fetch is complete\n  }, [id]); // Effect dependency on id ensures it runs when id changes\n\n  // Display loading text until the fetch operation is complete\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n\n  // Display error message if an error occurred during fetch\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n\n  // Render book details\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: book.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", book.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ISBN: \", book.isbn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(BookDetail, \"N7ANq1E0b1YyhXXP1EBPEDEN3Hk=\", false, function () {\n  return [useParams];\n});\n_c = BookDetail;\nexport default BookDetail;\nvar _c;\n$RefreshReg$(_c, \"BookDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","BookDetail","_s","id","book","setBook","loading","setLoading","error","setError","fetch","then","response","ok","Error","statusText","json","data","catch","console","message","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","author","isbn","_c","$RefreshReg$"],"sources":["/home/benjamin/LibrarymanagementSystem/src/BookDetail/BookDetail.js"],"sourcesContent":["// src/BookDetail/BookDetail.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './BookDetail.css'; // Ensure this path matches the location of your CSS file\n\nconst BookDetail = () => {\n  const { id } = useParams(); // Extract the book ID from the URL\n  const [book, setBook] = useState(null); // State to hold book details\n  const [loading, setLoading] = useState(true); // State to manage loading status\n  const [error, setError] = useState(''); // State to store any error messages\n\n  useEffect(() => {\n    setLoading(true); // Set loading to true when starting to fetch\n    fetch(`http://localhost:8081/api/books/${id}`)\n      .then(response => {\n        if (!response.ok) {\n          // Check if response is not ok and throw error\n          throw new Error('Failed to fetch book details: ' + response.statusText);\n        }\n        return response.json();\n      })\n      .then(data => {\n        setBook(data); // Set the fetched data to the book state\n        setError(''); // Clear any previous errors\n      })\n      .catch(error => {\n        console.error(\"There was an error fetching the book details:\", error);\n        setError(error.message); // Set error message to display in UI\n      })\n      .finally(() => setLoading(false)); // Set loading to false when fetch is complete\n  }, [id]); // Effect dependency on id ensures it runs when id changes\n\n  // Display loading text until the fetch operation is complete\n  if (loading) return <div>Loading...</div>;\n\n  // Display error message if an error occurred during fetch\n  if (error) return <div className=\"error-message\">Error: {error}</div>;\n\n  // Render book details\n  return (\n    <div className=\"book-detail-container\">\n      <h2>{book.name}</h2>\n      <p>Author: {book.author}</p>\n      <p>ISBN: {book.isbn}</p>\n      {/* You can add more details here as needed */}\n    </div>\n  );\n};\n\nexport default BookDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}