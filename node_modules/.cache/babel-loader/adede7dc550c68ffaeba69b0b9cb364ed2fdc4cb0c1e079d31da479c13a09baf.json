{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/LibrarymanagementSystem/src/AdminDashboard/AdminDashboard.js\",\n  _s = $RefreshSig$();\n// src/AdminDashboard/AdminDashboard.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n\n  // Authentication check (simplified version)\n  useEffect(() => {\n    const authToken = localStorage.getItem('authToken');\n    if (!authToken) {\n      navigate('/login');\n    } else {\n      // Assuming you have an endpoint to verify the token and get user details\n      fetch('http://localhost:8081/api/auth/verifyToken', {\n        headers: {\n          'Authorization': `Bearer ${authToken}`\n        }\n      }).then(response => response.json()).then(data => {\n        if (!data.isAdmin) {\n          navigate('/'); // Redirect non-admin users\n        }\n      }).catch(() => navigate('/login'));\n    }\n  }, [navigate]);\n\n  // Fetch books and users from the backend\n  useEffect(() => {\n    fetch('http://localhost:8081/api/books', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n      }\n    }).then(response => response.json()).then(setBooks).catch(console.error);\n    fetch('http://localhost:8081/api/users', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n      }\n    }).then(response => response.json()).then(setUsers).catch(console.error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Books Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Users Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"sO0vMYkv9WNAxSLP7kowke3vAS8=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AdminDashboard","_s","books","setBooks","users","setUsers","navigate","authToken","localStorage","getItem","fetch","headers","then","response","json","data","isAdmin","catch","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/benjamin/LibrarymanagementSystem/src/AdminDashboard/AdminDashboard.js"],"sourcesContent":["// src/AdminDashboard/AdminDashboard.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminDashboard.css';\n\nconst AdminDashboard = () => {\n  const [books, setBooks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n\n  // Authentication check (simplified version)\n  useEffect(() => {\n    const authToken = localStorage.getItem('authToken');\n    if (!authToken) {\n      navigate('/login');\n    } else {\n      // Assuming you have an endpoint to verify the token and get user details\n      fetch('http://localhost:8081/api/auth/verifyToken', {\n        headers: {\n          'Authorization': `Bearer ${authToken}`\n        }\n      }).then(response => response.json())\n        .then(data => {\n          if (!data.isAdmin) {\n            navigate('/'); // Redirect non-admin users\n          }\n        }).catch(() => navigate('/login'));\n    }\n  }, [navigate]);\n\n  // Fetch books and users from the backend\n  useEffect(() => {\n    fetch('http://localhost:8081/api/books', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n      }\n    })\n      .then(response => response.json())\n      .then(setBooks)\n      .catch(console.error);\n\n    fetch('http://localhost:8081/api/users', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n      }\n    })\n      .then(response => response.json())\n      .then(setUsers)\n      .catch(console.error);\n  }, []);\n\n  return (\n    <div className=\"admin-dashboard-container\">\n      <h1>Admin Dashboard</h1>\n      <section>\n        <h2>Books Management</h2>\n        {/* Render books list and management buttons */}\n      </section>\n      <section>\n        <h2>Users Management</h2>\n        {/* Render users list and management buttons */}\n      </section>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}