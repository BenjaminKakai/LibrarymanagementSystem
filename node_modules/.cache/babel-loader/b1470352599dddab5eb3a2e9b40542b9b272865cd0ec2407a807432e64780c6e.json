{"ast":null,"code":"var _jsxFileName = \"/home/benjamin/LibrarymanagementSystem/src/NavigationBar/NavigationBar.js\",\n  _s = $RefreshSig$();\n// src/NavigationBar/NavigationBar.js\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavigationBar.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavigationBar = () => {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // This is a simplified example. In a real app, you would want to verify\n    // the user's role and authentication status more securely, typically by\n    // calling an API endpoint on your backend that verifies the user's token.\n    const authToken = localStorage.getItem('authToken');\n    setIsAuthenticated(!!authToken);\n    // Assuming you store user's role in local storage after login\n    // This is not secure for real applications, as local storage can be manipulated by the user\n    setIsAdmin(localStorage.getItem('userRole') === 'admin');\n  }, []);\n  const handleLogout = () => {\n    // Clear user authentication token and other related information\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userRole');\n    setIsAuthenticated(false);\n    setIsAdmin(false);\n    // Redirect to home page or login page\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"nav-link\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/books\",\n      className: \"nav-link\",\n      children: \"Catalog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/profile\",\n      className: \"nav-link\",\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin\",\n      className: \"nav-link\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      className: \"nav-link\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"nav-link\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        className: \"nav-link\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(NavigationBar, \"4cMVGnfg8dfcRjQj6hpaevQFn+o=\");\n_c = NavigationBar;\nexport default NavigationBar;\nvar _c;\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","NavigationBar","_s","isAdmin","setIsAdmin","isAuthenticated","setIsAuthenticated","authToken","localStorage","getItem","handleLogout","removeItem","window","location","href","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/benjamin/LibrarymanagementSystem/src/NavigationBar/NavigationBar.js"],"sourcesContent":["// src/NavigationBar/NavigationBar.js\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavigationBar.css'; // Importing the CSS file\n\nconst NavigationBar = () => {\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    // This is a simplified example. In a real app, you would want to verify\n    // the user's role and authentication status more securely, typically by\n    // calling an API endpoint on your backend that verifies the user's token.\n    const authToken = localStorage.getItem('authToken');\n    setIsAuthenticated(!!authToken);\n    // Assuming you store user's role in local storage after login\n    // This is not secure for real applications, as local storage can be manipulated by the user\n    setIsAdmin(localStorage.getItem('userRole') === 'admin');\n  }, []);\n\n  const handleLogout = () => {\n    // Clear user authentication token and other related information\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userRole');\n    setIsAuthenticated(false);\n    setIsAdmin(false);\n    // Redirect to home page or login page\n    window.location.href = '/';\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <Link to=\"/\" className=\"nav-link\">Home</Link>\n      <Link to=\"/books\" className=\"nav-link\">Catalog</Link>\n      {isAuthenticated && <Link to=\"/profile\" className=\"nav-link\">Profile</Link>}\n      {isAdmin && <Link to=\"/admin\" className=\"nav-link\">Admin Dashboard</Link>}\n      {isAuthenticated ? (\n        <button onClick={handleLogout} className=\"nav-link\">Logout</button>\n      ) : (\n        <>\n          <Link to=\"/login\" className=\"nav-link\">Login</Link>\n          <Link to=\"/register\" className=\"nav-link\">Register</Link>\n        </>\n      )}\n    </nav>\n  );\n};\n\nexport default NavigationBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}